namespace = crisis
planet_event = {
    id = crisis.2046
    hide_window = yes
    is_triggered_only = yes
    immediate = {
        set_global_flag = ai_invasion_defeated
        event_target:final_machine_world_destroyer = {
            set_country_flag = does_not_compute
        }
        if = {
            limit = {
                event_target:final_machine_world_destroyer = {
                    is_ai = no
                }
            }
            event_target:final_machine_world_destroyer = {
                save_event_target_as = final_machine_world_player_destroyer
            }
        }
        else_if = {
            limit = {
                any_country = {
                    is_ai = no
                    has_country_flag = does_not_compute
                }
            }
            random_country = {
                limit = {
                    is_ai = no
                    has_country_flag = does_not_compute
                }
                save_event_target_as = final_machine_world_player_destroyer
            }
        }
        if = {
            limit = {
                exists = event_target:final_machine_world_player_destroyer
                NOT = {
                    has_planet_flag = planet_shielded
                }
            }
            if = {
                limit = {
                    NOT = {
                        has_planet_flag = planet_shielded
                    }
                }
                event_target:final_machine_world_player_destroyer = {
                country_event = {
                    id = crisis.2480
                    days = 10
                    random = 10
                }
            }
        }
            else_if = {
            limit = {
                has_planet_flag = planet_shielded
            }
                event_target:final_machine_world_player_destroyer = {
                country_event = {
                    id = crisis.2481
                    days = 10
                    random = 10
                }
            }
        }
        }
        remove_global_flag = synth_terror
        remove_global_flag = ai_ghost_signal
        remove_global_flag = ai_invasion_ongoing
        solar_system = {
            random_system_ambient_object = {
                limit = {
                    has_ambient_object_flag = contingency_system_effect_2
                }
                destroy_ambient_object = this
            }
        }
        if = {
            limit = {
                OR = {
                    NOT = {
                        has_planet_flag = destroyed_by_colossus
                    }
                    has_planet_flag = planet_godrayed
                }
            }
            destroy_colony = yes
            change_pc = pc_broken
            reset_planet = yes
            gpm_purge_all_planetary_modifiers = yes
            gpm_purge_all_core_modifiers = yes
        }
        every_country = {
            limit = {
                has_notification_modifier = ghost_signal_1
            }
            remove_notification_modifier = ghost_signal_1
            every_owned_pop = {
                limit = {
                    has_modifier = "pop_ghost_signal_1"
                }
                remove_modifier = "pop_ghost_signal_1"
            }
            every_owned_ship = {
                limit = {
                    has_sapient_combat_computer = yes
                }
                remove_modifier = "ship_ghost_signal_1"
            }
        }
        every_country = {
            limit = {
                has_event_chain = "ai_crisis_chain"
            }
            end_event_chain = "ai_crisis_chain"
        }
        every_country = {
            limit = {
                has_special_project = SYNTH_INFILTRATION_PROJECT
            }
            abort_special_project = {
                type = SYNTH_INFILTRATION_PROJECT
            }
        }
        every_country = {
            limit = {
                has_modifier = unity_reduction_crisis_2204
            }
            remove_modifier = unity_reduction_crisis_2204
        }
        random_country = {
            observer_event = {
                id = observer.51
            }
        }
        every_country = {
            limit = {
                OR = {
                    is_country_type = default
                    is_country_type = fallen_empire
                    is_country_type = awakened_fallen_empire
                }
            }
            country_event = {
                id = crisis.2038
            }
            every_owned_planet = {
                limit = {
                    has_modifier = synth_planet_paranoia
                }
                remove_modifier = synth_planet_paranoia
            }
        }
        every_country = {
            limit = {
                is_fallen_machine_empire = yes
            }
            country_event = {
                id = fallen_machine_empire.3
                days = 1
            }
        }
        random_country = {
            limit = {
                is_country_type = ai_empire
            }
            destroy_country = yes
        }
        end_crisis = yes
        event_target:final_machine_world_destroyer = {
            set_country_flag = final_machine_world_destroyed
        }
        if = {
            limit = {
                has_global_flag = cybrex_resurface
                NOT = {
                    has_global_flag = cybrex_destroyed
                }
            }
            random_country = {
                limit = {
                    is_country_type = cybrex_empire
                }
                every_country = {
                    limit = {
                        has_country_flag = cybrex_donation
                    }
                    country_event = {
                        id = crisis.2474
                        days = 20
                        random = 30
                    }
                }
                country_event = {
                    id = crisis.2406
                    days = 365
                    random = 800
                }
            }
        }
    }
}
