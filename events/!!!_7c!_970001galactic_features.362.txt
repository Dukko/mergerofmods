namespace = galactic_features
event = {
    id = galactic_features.362
    hide_window = yes
    is_triggered_only = yes
    immediate = {
        random_system = {
            limit = {
                has_star_flag = blue_system
                NOR = {
                    any_fleet_in_system = {
                        exists = owner
                        owner = {
                            is_country_type = crystal
                        }
                    }
                    any_country = {
                        intel_level = {
                            level > low
                            system = prev
                        }
                    }
                }
            }
            random_system_planet = {
                limit = {
                    is_star = no
                }
                create_crystal_country = yes
                event_target:crystal_country = {
                    create_fleet = {
                        name = "NAME_Crystalline_Entity"
                        effect = {
                            set_owner = event_target:crystal_country
                            create_ship = {
                                name = "NAME_Delta"
                                design = "NAME_Large_Crystal_Entity_Blue"
                            }
                            create_ship = {
                                name = "NAME_Epsilon"
                                design = "NAME_Medium_Crystal_Entity_Blue"
                            }
                            create_ship = {
                                name = "NAME_Omega"
                                design = "NAME_Small_Crystal_Entity_Blue"
                            }
                            set_location = PREVPREV
                            set_fleet_stance = aggressive
                            set_aggro_range_measure_from = self
                            set_aggro_range = 150
                        }
                    }
                }
            }
        }
        random_system = {
            limit = {
                has_star_flag = blue2_system
                NOR = {
                    any_fleet_in_system = {
                        exists = owner
                        owner = {
                            is_country_type = crystal
                        }
                    }
                    any_country = {
                        intel_level = {
                            level > low
                            system = prev
                        }
                    }
                }
            }
            random_system_planet = {
                limit = {
                    is_star = no
                }
                save_event_target_as = blue2_trigger_1
            }
            random_system_planet = {
                limit = {
                    is_star = no
                    NOT = {
                        is_same_value = event_target:blue2_trigger_1
                    }
                }
                save_event_target_as = blue2_trigger_2
            }
            random_system_planet = {
                limit = {
                    is_star = no
                    NOR = {
                        is_same_value = event_target:blue2_trigger_1
                        is_same_value = event_target:blue2_trigger_2
                    }
                }
                save_event_target_as = blue2_trigger_3
                create_crystal_country = yes
                event_target:crystal_country = {
                    create_fleet = {
                        name = "NAME_Crystalline_Entity"
                        effect = {
                            set_owner = event_target:crystal_country
                            create_ship = {
                                name = "NAME_Delta"
                                design = "NAME_Large_Crystal_Entity_Blue"
                            }
                            create_ship = {
                                name = "NAME_Epsilon"
                                design = "NAME_Medium_Crystal_Entity_Blue"
                            }
                            create_ship = {
                                name = "NAME_Omega"
                                design = "NAME_Small_Crystal_Entity_Blue"
                            }
                            set_location = PREVPREV
                            set_fleet_stance = aggressive
                            set_aggro_range_measure_from = self
                            set_aggro_range = 150
                        }
                    }
                    create_fleet = {
                        name = "NAME_Crystalline_Entity"
                        effect = {
                            set_owner = event_target:crystal_country
                            create_ship = {
                                name = "NAME_Delta"
                                design = "NAME_Large_Crystal_Entity_Blue"
                            }
                            create_ship = {
                                name = "NAME_Epsilon"
                                design = "NAME_Medium_Crystal_Entity_Blue"
                            }
                            create_ship = {
                                name = "NAME_Omega"
                                design = "NAME_Small_Crystal_Entity_Blue"
                            }
                            set_location = event_target:blue2_trigger_2
                            set_fleet_stance = aggressive
                            set_aggro_range_measure_from = self
                            set_aggro_range = 150
                        }
                    }
                    create_fleet = {
                        name = "NAME_Crystalline_Entity"
                        effect = {
                            set_owner = event_target:crystal_country
                            create_ship = {
                                name = "NAME_Delta"
                                design = "NAME_Large_Crystal_Entity_Blue"
                            }
                            create_ship = {
                                name = "NAME_Epsilon"
                                design = "NAME_Medium_Crystal_Entity_Blue"
                            }
                            create_ship = {
                                name = "NAME_Omega"
                                design = "NAME_Small_Crystal_Entity_Blue"
                            }
                            set_location = event_target:blue2_trigger_1
                            set_fleet_stance = aggressive
                            set_aggro_range_measure_from = self
                            set_aggro_range = 150
                        }
                    }
                }
            }
        }
        random_system = {
            limit = {
                has_star_flag = green_system
                NOR = {
                    any_fleet_in_system = {
                        exists = owner
                        owner = {
                            is_country_type = crystal
                        }
                    }
                    any_country = {
                        intel_level = {
                            level > low
                            system = prev
                        }
                    }
                }
            }
            random_system_planet = {
                limit = {
                    is_star = no
                    is_moon = no
                }
                save_event_target_as = green_trigger_1
            }
            random_system_planet = {
                limit = {
                    is_star = no
                    is_moon = no
                    NOT = {
                        is_same_value = event_target:green_trigger_1
                    }
                }
                save_event_target_as = green_trigger_2
            }
            random_system_planet = {
                limit = {
                    is_star = no
                    is_moon = no
                    NOR = {
                        is_same_value = event_target:green_trigger_1
                        is_same_value = event_target:green_trigger_2
                    }
                }
                save_event_target_as = green_trigger_3
                create_crystal_country = yes
                event_target:crystal_country = {
                    create_fleet = {
                        name = "NAME_Crystalline_Entity"
                        effect = {
                            set_owner = event_target:crystal_country
                            create_ship = {
                                name = "NAME_Delta"
                                design = "NAME_Large_Crystal_Entity_Green"
                            }
                            create_ship = {
                                name = "NAME_Epsilon"
                                design = "NAME_Medium_Crystal_Entity_Green"
                            }
                            create_ship = {
                                name = "NAME_Omega"
                                design = "NAME_Small_Crystal_Entity_Green"
                            }
                            set_location = PREVPREV
                            set_fleet_stance = aggressive
                            set_aggro_range_measure_from = self
                            set_aggro_range = 100
                            queue_actions = {
                                repeat = {
                                    find_closest_planet = {
                                        trigger = {
                                            id = "greenC.x1.trigger.1"
                                            is_planet = event_target:green_trigger_1
                                        }
                                        found_planet = {
                                            orbit_planet = THIS
                                        }
                                    }
                                    find_closest_planet = {
                                        trigger = {
                                            id = "greenC.x1.trigger.2"
                                            is_planet = event_target:green_trigger_2
                                        }
                                        found_planet = {
                                            orbit_planet = THIS
                                        }
                                    }
                                    find_closest_planet = {
                                        trigger = {
                                            id = "greenC.x1.trigger.3"
                                            is_planet = event_target:green_trigger_3
                                        }
                                        found_planet = {
                                            orbit_planet = THIS
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        random_system = {
            limit = {
                has_star_flag = green2_system
                NOR = {
                    any_fleet_in_system = {
                        exists = owner
                        owner = {
                            is_country_type = crystal
                        }
                    }
                    any_country = {
                        intel_level = {
                            level > low
                            system = prev
                        }
                    }
                }
            }
            random_system_planet = {
                limit = {
                    is_star = no
                }
                save_event_target_as = green2_trigger_1
            }
            random_system_planet = {
                limit = {
                    is_star = no
                    NOT = {
                        is_same_value = event_target:green2_trigger_1
                    }
                }
                save_event_target_as = green2_trigger_2
            }
            random_system_planet = {
                limit = {
                    is_star = no
                    NOR = {
                        is_same_value = event_target:green2_trigger_1
                        is_same_value = event_target:green2_trigger_2
                    }
                }
                save_event_target_as = green2_trigger_3
                create_crystal_country = yes
                event_target:crystal_country = {
                    save_event_target_as = green2_owner
                    create_fleet = {
                        name = "NAME_Crystalline_Entity"
                        effect = {
                            set_owner = event_target:crystal_country
                            create_ship = {
                                name = "NAME_Omega"
                                design = "NAME_Small_Crystal_Entity_Green"
                            }
                            create_ship = {
                                name = "NAME_Iota"
                                design = "NAME_Small_Crystal_Entity_Green"
                            }
                            create_ship = {
                                name = "NAME_Mu"
                                design = "NAME_Small_Crystal_Entity_Green"
                            }
                            set_location = event_target:green2_trigger_3
                            set_fleet_stance = aggressive
                            set_aggro_range_measure_from = return_point
                            set_aggro_range = 40
                            queue_actions = {
                                repeat = {
                                    find_closest_planet = {
                                        trigger = {
                                            id = "greenC2.x1.trigger.1"
                                            is_planet = event_target:green2_trigger_1
                                        }
                                        found_planet = {
                                            orbit_planet = THIS
                                        }
                                    }
                                    find_closest_planet = {
                                        trigger = {
                                            id = "greenC2.x1.trigger.2"
                                            is_planet = event_target:green2_trigger_2
                                        }
                                        found_planet = {
                                            orbit_planet = THIS
                                        }
                                    }
                                    find_closest_planet = {
                                        trigger = {
                                            id = "greenC2.x1.trigger.3"
                                            is_planet = event_target:green2_trigger_3
                                        }
                                        found_planet = {
                                            orbit_planet = THIS
                                        }
                                    }
                                }
                            }
                        }
                    }
                    create_fleet = {
                        name = "NAME_Crystalline_Entity"
                        effect = {
                            set_owner = event_target:crystal_country
                            create_ship = {
                                name = "NAME_Omega"
                                design = "NAME_Small_Crystal_Entity_Green"
                            }
                            create_ship = {
                                name = "NAME_Iota"
                                design = "NAME_Small_Crystal_Entity_Green"
                            }
                            create_ship = {
                                name = "NAME_Mu"
                                design = "NAME_Small_Crystal_Entity_Green"
                            }
                            set_location = event_target:green2_trigger_1
                            set_fleet_stance = aggressive
                            set_aggro_range_measure_from = self
                            set_aggro_range = 40
                            queue_actions = {
                                repeat = {
                                    find_closest_planet = {
                                        trigger = {
                                            id = "greenC2.x2.trigger.2"
                                            is_planet = event_target:green2_trigger_2
                                        }
                                        found_planet = {
                                            orbit_planet = THIS
                                        }
                                    }
                                    find_closest_planet = {
                                        trigger = {
                                            id = "greenC2.x2.trigger.3"
                                            is_planet = event_target:green2_trigger_3
                                        }
                                        found_planet = {
                                            orbit_planet = THIS
                                        }
                                    }
                                    find_closest_planet = {
                                        trigger = {
                                            id = "greenC2.x2.trigger.1"
                                            is_planet = event_target:green2_trigger_1
                                        }
                                        found_planet = {
                                            orbit_planet = THIS
                                        }
                                    }
                                }
                            }
                        }
                    }
                    create_fleet = {
                        name = "NAME_Crystalline_Entity"
                        effect = {
                            set_owner = event_target:crystal_country
                            create_ship = {
                                name = "NAME_Omega"
                                design = "NAME_Small_Crystal_Entity_Green"
                            }
                            create_ship = {
                                name = "NAME_Iota"
                                design = "NAME_Small_Crystal_Entity_Green"
                            }
                            create_ship = {
                                name = "NAME_Mu"
                                design = "NAME_Small_Crystal_Entity_Green"
                            }
                            set_location = event_target:green2_trigger_2
                            set_fleet_stance = aggressive
                            set_aggro_range_measure_from = self
                            set_aggro_range = 40
                            queue_actions = {
                                repeat = {
                                    find_closest_planet = {
                                        trigger = {
                                            id = "greenC2.x3.trigger.3"
                                            is_planet = event_target:green2_trigger_3
                                        }
                                        found_planet = {
                                            orbit_planet = THIS
                                        }
                                    }
                                    find_closest_planet = {
                                        trigger = {
                                            id = "greenC2.x3.trigger.1"
                                            is_planet = event_target:green2_trigger_1
                                        }
                                        found_planet = {
                                            orbit_planet = THIS
                                        }
                                    }
                                    find_closest_planet = {
                                        trigger = {
                                            id = "greenC2.x3.trigger.2"
                                            is_planet = event_target:green2_trigger_2
                                        }
                                        found_planet = {
                                            orbit_planet = THIS
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        random_system = {
            limit = {
                has_star_flag = red_system
                NOR = {
                    any_fleet_in_system = {
                        exists = owner
                        owner = {
                            is_country_type = crystal
                        }
                    }
                    any_country = {
                        intel_level = {
                            level > low
                            system = prev
                        }
                    }
                }
            }
            random_system_planet = {
                limit = {
                    is_star = no
                    is_moon = no
                }
                save_event_target_as = red_trigger_1
            }
            random_system_planet = {
                limit = {
                    is_star = no
                    is_moon = no
                    NOT = {
                        is_same_value = event_target:red_trigger_1
                    }
                }
                save_event_target_as = red_trigger_2
            }
            random_system_planet = {
                limit = {
                    is_star = no
                    is_moon = no
                    NOR = {
                        is_same_value = event_target:red_trigger_1
                        is_same_value = event_target:red_trigger_2
                    }
                }
                save_event_target_as = red_trigger_3
            }
            random_system_planet = {
                limit = {
                    is_star = no
                    is_moon = no
                    NOR = {
                        is_same_value = event_target:red_trigger_1
                        is_same_value = event_target:red_trigger_2
                        is_same_value = event_target:red_trigger_3
                    }
                }
                save_event_target_as = red_trigger_4
                create_crystal_country = yes
                event_target:crystal_country = {
                    save_event_target_as = red_crystals
                    create_fleet = {
                        name = "NAME_Crystalline_Entity"
                        effect = {
                            set_owner = event_target:crystal_country
                            create_ship = {
                                name = "NAME_Delta"
                                design = "NAME_Large_Crystal_Entity_Red"
                            }
                            set_location = event_target:red_trigger_1
                            set_fleet_stance = aggressive
                            set_aggro_range_measure_from = return_point
                            set_aggro_range = 40
                            queue_actions = {
                                repeat = {
                                    wait = {
                                        duration = 9999
                                    }
                                }
                            }
                        }
                    }
                    create_fleet = {
                        name = "NAME_Crystalline_Entity"
                        effect = {
                            set_fleet_stance = aggressive
                            set_aggro_range_measure_from = return_point
                            set_aggro_range = 30
                            set_owner = event_target:crystal_country
                            create_ship = {
                                name = "NAME_Epsilon"
                                design = "NAME_Large_Crystal_Entity_Red"
                            }
                            set_location = event_target:red_trigger_2
                            queue_actions = {
                                repeat = {
                                    wait = {
                                        duration = 9999
                                    }
                                }
                            }
                        }
                    }
                    create_fleet = {
                        name = "NAME_Crystalline_Entity"
                        effect = {
                            set_fleet_stance = aggressive
                            set_aggro_range_measure_from = return_point
                            set_aggro_range = 40
                            set_owner = event_target:crystal_country
                            create_ship = {
                                name = "NAME_Omega"
                                design = "NAME_Large_Crystal_Entity_Red"
                            }
                            set_location = event_target:red_trigger_3
                            queue_actions = {
                                repeat = {
                                    wait = {
                                        duration = 9999
                                    }
                                }
                            }
                        }
                    }
                    create_fleet = {
                        name = "NAME_Crystalline_Entity"
                        effect = {
                            set_fleet_stance = aggressive
                            set_aggro_range_measure_from = return_point
                            set_aggro_range = 30
                            set_owner = event_target:crystal_country
                            create_ship = {
                                name = "NAME_Alpha"
                                design = "NAME_Large_Crystal_Entity_Red"
                            }
                            set_location = event_target:red_trigger_4
                            queue_actions = {
                                repeat = {
                                    wait = {
                                        duration = 9999
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        random_system = {
            limit = {
                has_star_flag = red2_system
                NOR = {
                    any_fleet_in_system = {
                        exists = owner
                        owner = {
                            is_country_type = crystal
                        }
                    }
                    any_country = {
                        intel_level = {
                            level > low
                            system = prev
                        }
                    }
                }
            }
            random_system_planet = {
                limit = {
                    is_star = no
                    is_moon = no
                }
                save_event_target_as = red2_trigger_1
            }
            random_system_planet = {
                limit = {
                    is_star = no
                    is_moon = no
                    NOT = {
                        is_same_value = event_target:red2_trigger_1
                    }
                }
                save_event_target_as = red2_trigger_2
            }
            random_system_planet = {
                limit = {
                    is_star = no
                    is_moon = no
                    NOR = {
                        is_same_value = event_target:red2_trigger_1
                        is_same_value = event_target:red2_trigger_2
                    }
                }
                save_event_target_as = red2_trigger_3
            }
            random_system_planet = {
                limit = {
                    is_star = no
                    is_moon = no
                    NOR = {
                        is_same_value = event_target:red2_trigger_1
                        is_same_value = event_target:red2_trigger_2
                        is_same_value = event_target:red2_trigger_3
                    }
                }
                save_event_target_as = red2_trigger_4
                create_crystal_country = yes
                event_target:crystal_country = {
                    save_event_target_as = red2_crystals
                    create_fleet = {
                        name = "NAME_Crystalline_Entity"
                        effect = {
                            set_owner = event_target:crystal_country
                            create_ship = {
                                name = "NAME_Delta"
                                design = "NAME_Large_Crystal_Entity_Red"
                            }
                            create_ship = {
                                name = "NAME_Omicron"
                                design = "NAME_Medium_Crystal_Entity_Red"
                            }
                            create_ship = {
                                name = "NAME_Kappa"
                                design = "NAME_Medium_Crystal_Entity_Red"
                            }
                            create_ship = {
                                name = "NAME_Lambda"
                                design = "NAME_Small_Crystal_Entity_Red"
                            }
                            create_ship = {
                                name = "NAME_Tau"
                                design = "NAME_Small_Crystal_Entity_Red"
                            }
                            set_location = event_target:red2_trigger_1
                            set_fleet_stance = aggressive
                            set_aggro_range_measure_from = return_point
                            set_aggro_range = 100
                            queue_actions = {
                                repeat = {
                                    wait = {
                                        duration = 9999
                                    }
                                }
                            }
                        }
                    }
                    create_fleet = {
                        name = "NAME_Crystalline_Entity"
                        effect = {
                            set_owner = event_target:crystal_country
                            create_ship = {
                                name = "NAME_Epsilon"
                                design = "NAME_Large_Crystal_Entity_Red"
                            }
                            create_ship = {
                                name = "NAME_Omicron"
                                design = "NAME_Medium_Crystal_Entity_Red"
                            }
                            create_ship = {
                                name = "NAME_Kappa"
                                design = "NAME_Medium_Crystal_Entity_Red"
                            }
                            create_ship = {
                                name = "NAME_Lambda"
                                design = "NAME_Small_Crystal_Entity_Red"
                            }
                            create_ship = {
                                name = "NAME_Tau"
                                design = "NAME_Small_Crystal_Entity_Red"
                            }
                            set_location = event_target:red2_trigger_2
                            set_fleet_stance = aggressive
                            set_aggro_range_measure_from = return_point
                            set_aggro_range = 100
                            queue_actions = {
                                repeat = {
                                    wait = {
                                        duration = 9999
                                    }
                                }
                            }
                        }
                    }
                    create_fleet = {
                        name = "NAME_Crystalline_Entity"
                        effect = {
                            set_owner = event_target:crystal_country
                            create_ship = {
                                name = "NAME_Omega"
                                design = "NAME_Large_Crystal_Entity_Red"
                            }
                            create_ship = {
                                name = "NAME_Omicron"
                                design = "NAME_Medium_Crystal_Entity_Red"
                            }
                            create_ship = {
                                name = "NAME_Kappa"
                                design = "NAME_Medium_Crystal_Entity_Red"
                            }
                            create_ship = {
                                name = "NAME_Lambda"
                                design = "NAME_Small_Crystal_Entity_Red"
                            }
                            create_ship = {
                                name = "NAME_Tau"
                                design = "NAME_Small_Crystal_Entity_Red"
                            }
                            set_location = event_target:red2_trigger_3
                            set_fleet_stance = aggressive
                            set_aggro_range_measure_from = return_point
                            set_aggro_range = 100
                            queue_actions = {
                                repeat = {
                                    wait = {
                                        duration = 9999
                                    }
                                }
                            }
                        }
                    }
                    create_fleet = {
                        name = "NAME_Crystalline_Entity"
                        effect = {
                            set_owner = event_target:crystal_country
                            create_ship = {
                                name = "NAME_Alpha"
                                design = "NAME_Large_Crystal_Entity_Red"
                            }
                            create_ship = {
                                name = "NAME_Omicron"
                                design = "NAME_Medium_Crystal_Entity_Red"
                            }
                            create_ship = {
                                name = "NAME_Kappa"
                                design = "NAME_Medium_Crystal_Entity_Red"
                            }
                            create_ship = {
                                name = "NAME_Lambda"
                                design = "NAME_Small_Crystal_Entity_Red"
                            }
                            create_ship = {
                                name = "NAME_Tau"
                                design = "NAME_Small_Crystal_Entity_Red"
                            }
                            set_location = event_target:red2_trigger_4
                            set_fleet_stance = aggressive
                            set_aggro_range_measure_from = return_point
                            set_aggro_range = 100
                            queue_actions = {
                                repeat = {
                                    wait = {
                                        duration = 9999
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        random_system = {
            limit = {
                has_star_flag = elite_system
                NOR = {
                    any_fleet_in_system = {
                        exists = owner
                        owner = {
                            is_country_type = crystal
                        }
                    }
                    any_country = {
                        intel_level = {
                            level > low
                            system = prev
                        }
                    }
                }
            }
            random_system_planet = {
                limit = {
                    is_star = yes
                }
                create_crystal_country = yes
                event_target:crystal_country = {
                    save_event_target_as = elite1_owner
                    create_fleet = {
                        name = "NAME_Crystalline_Elites"
                        effect = {
                            set_owner = event_target:crystal_country
                            create_ship = {
                                name = "NAME_Delta"
                                design = "NAME_Large_Crystal_Entity_Red_Elite"
                            }
                            create_ship = {
                                name = "NAME_Epsilon"
                                design = "NAME_Medium_Crystal_Entity_Blue_Elite"
                            }
                            create_ship = {
                                name = "NAME_Omega"
                                design = "NAME_Small_Crystal_Entity_Yellow_Elite"
                            }
                            create_ship = {
                                name = "NAME_Beta"
                                design = "NAME_Large_Crystal_Entity_Blue_Elite"
                            }
                            create_ship = {
                                name = "NAME_Gamma"
                                design = "NAME_Medium_Crystal_Entity_Yellow_Elite"
                            }
                            create_ship = {
                                name = "NAME_Psi"
                                design = "NAME_Small_Crystal_Entity_Red_Elite"
                            }
                            set_location = PREVPREV
                            set_fleet_stance = aggressive
                            set_aggro_range_measure_from = self
                            set_aggro_range = 500
                        }
                    }
                    create_fleet = {
                        name = "NAME_Crystalline_Elites"
                        effect = {
                            set_owner = event_target:crystal_country
                            create_ship = {
                                name = "NAME_Delta"
                                design = "NAME_Large_Crystal_Entity_Yellow_Elite"
                            }
                            create_ship = {
                                name = "NAME_Epsilon"
                                design = "NAME_Medium_Crystal_Entity_Red_Elite"
                            }
                            create_ship = {
                                name = "NAME_Omega"
                                design = "NAME_Small_Crystal_Entity_Blue_Elite"
                            }
                            create_ship = {
                                name = "NAME_Beta"
                                design = "NAME_Large_Crystal_Entity_Red_Elite"
                            }
                            create_ship = {
                                name = "NAME_Gamma"
                                design = "NAME_Medium_Crystal_Entity_Yellow_Elite"
                            }
                            create_ship = {
                                name = "NAME_Psi"
                                design = "NAME_Small_Crystal_Entity_Blue_Elite"
                            }
                            set_location = PREVPREV
                            set_fleet_stance = aggressive
                            set_aggro_range_measure_from = self
                            set_aggro_range = 500
                        }
                    }
                    create_fleet = {
                        name = "NAME_Crystalline_Elites"
                        effect = {
                            set_owner = event_target:crystal_country
                            create_ship = {
                                name = "NAME_Delta"
                                design = "NAME_Large_Crystal_Entity_Blue_Elite"
                            }
                            create_ship = {
                                name = "NAME_Epsilon"
                                design = "NAME_Medium_Crystal_Entity_Red_Elite"
                            }
                            create_ship = {
                                name = "NAME_Omega"
                                design = "NAME_Small_Crystal_Entity_Yellow_Elite"
                            }
                            create_ship = {
                                name = "NAME_Beta"
                                design = "NAME_Large_Crystal_Entity_Yellow_Elite"
                            }
                            create_ship = {
                                name = "NAME_Gamma"
                                design = "NAME_Medium_Crystal_Entity_Blue_Elite"
                            }
                            create_ship = {
                                name = "NAME_Psi"
                                design = "NAME_Small_Crystal_Entity_Red_Elite"
                            }
                            set_location = PREVPREV
                            set_fleet_stance = aggressive
                            set_aggro_range_measure_from = self
                            set_aggro_range = 500
                        }
                    }
                }
            }
        }
        random_system = {
            limit = {
                has_star_flag = void_system
                NOR = {
                    any_fleet_in_system = {
                        exists = owner
                        owner = {
                            is_country_type = cloud
                        }
                    }
                    any_country = {
                        intel_level = {
                            level > low
                            system = prev
                        }
                    }
                }
            }
            random_system_planet = {
                limit = {
                    is_star = no
                }
                create_cloud_country = yes
                event_target:cloud_country = {
                    set_aggro_range = 500
                    create_fleet = {
                        name = "NAME_Void_Cloud"
                        effect = {
                            set_owner = event_target:cloud_country
                            create_ship = {
                                name = "NAME_XUUL"
                                design = "NAME_Cloud_Entity"
                            }
                            set_location = PREVPREV
                            set_fleet_stance = aggressive
                            set_aggro_range_measure_from = self
                            set_aggro_range = 500
                        }
                    }
                }
            }
        }
        random_system = {
            limit = {
                has_star_flag = amoeba_1_system
                NOR = {
                    any_fleet_in_system = {
                        exists = owner
                        owner = {
                            is_country_type = amoeba
                        }
                    }
                    any_country = {
                        intel_level = {
                            level > low
                            system = prev
                        }
                    }
                }
            }
            random_system_planet = {
                limit = {
                    is_star = no
                }
                create_amoeba_country = yes
                event_target:amoeba_country = {
                    create_fleet = {
                        name = "NAME_Space_Amoeba"
                        effect = {
                            set_owner = event_target:amoeba_country
                            create_ship = {
                                name = "NAME_Ortus"
                                design = "NAME_Large_Space_Organism_Orange"
                            }
                            create_ship = {
                                name = "NAME_Oriens"
                                design = "NAME_Large_Space_Organism_Orange"
                            }
                            create_ship = {
                                name = "NAME_Cortus"
                                design = "NAME_Large_Space_Organism_Orange"
                            }
                            set_location = PREVPREV
                            set_fleet_stance = aggressive
                            set_aggro_range_measure_from = self
                            set_aggro_range = 100
                        }
                    }
                    every_country = {
                        limit = {
                            has_modifier = pacified_amoebas
                        }
                        prev = {
                            set_faction_hostility = {
                                set_hostile = no
                                set_neutral = yes
                                target = prev
                            }
                        }
                    }
                }
            }
        }
        random_system = {
            limit = {
                has_star_flag = amoeba_2_system
                NOR = {
                    any_fleet_in_system = {
                        exists = owner
                        owner = {
                            is_country_type = amoeba
                        }
                    }
                    any_country = {
                        intel_level = {
                            level > low
                            system = prev
                        }
                    }
                }
            }
            random_system_planet = {
                limit = {
                    is_star = no
                }
                save_event_target_as = grazing_grounds
                create_amoeba_country = yes
                event_target:amoeba_country = {
                    create_fleet = {
                        name = "NAME_Space_Amoeba"
                        effect = {
                            set_owner = event_target:amoeba_country
                            random_list = {
                                10 = {
                                    set_fleet_flag = empire_visitor
                                }
                                20 = {
                                    set_fleet_flag = tiyanki_hunter
                                }
                                70 = {
                                    set_fleet_flag = empty_system
                                }
                            }
                            create_ship = {
                                name = "NAME_Ortus"
                                design = "NAME_Great_Space_Organism"
                            }
                            set_location = PREVPREV
                            set_fleet_stance = aggressive
                            set_aggro_range_measure_from = self
                            set_aggro_range = 20
                            if = {
                                limit = {
                                    has_fleet_flag = empire_visitor
                                }
                                queue_actions = {
                                    repeat = {
                                        find_random_system = {
                                            trigger = {
                                                id = amoeba.x3.trigger.1
                                                any_system_planet = {
                                                    is_capital = yes
                                                }
                                            }
                                            found_system = {
                                                move_to = this
                                            }
                                        }
                                        find_closest_planet = {
                                            trigger = {
                                                id = amoeba.x3.trigger.2
                                                is_star = yes
                                            }
                                            found_planet = {
                                                orbit_planet = this
                                                wait = {
                                                    duration = 30
                                                    random = 10
                                                }
                                            }
                                        }
                                        find_random_system = {
                                            trigger = {
                                                id = amoeba.x3.trigger.3
                                                closest_system = {
                                                    any_system_planet = {
                                                        is_planet = event_target:grazing_grounds
                                                    }
                                                }
                                            }
                                        }
                                        find_closest_planet = {
                                            trigger = {
                                                id = amoeba.x3.trigger.4
                                                is_planet = event_target:grazing_grounds
                                            }
                                            found_planet = {
                                                orbit_planet = this
                                                wait = {
                                                    duration = 400
                                                    random = 150
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            else_if = {
                                limit = {
                                    has_fleet_flag = tiyanki_hunter
                                }
                                save_event_target_as = hunting_amoeba
                                queue_actions = {
                                    repeat = {
                                        find_random_system = {
                                            trigger = {
                                                id = amoeba.x2.trigger.1
                                                closest_system = {
                                                    any_ship_in_system = {
                                                        is_ship_size = space_whale_3
                                                    }
                                                }
                                            }
                                            found_system = {
                                                move_to = this
                                            }
                                        }
                                        find_closest_planet = {
                                            trigger = {
                                                id = amoeba.x2.trigger.2
                                                is_star = yes
                                            }
                                            found_planet = {
                                                effect = {
                                                    id = amoeba.x2.effect.1
                                                    event_target:hunting_amoeba = {
                                                        set_aggro_range = 500
                                                    }
                                                }
                                                orbit_planet = this
                                                wait = {
                                                    duration = 300
                                                    random = 10
                                                }
                                            }
                                        }
                                        find_random_system = {
                                            trigger = {
                                                id = amoeba.x2.trigger.3
                                                closest_system = {
                                                    any_system_planet = {
                                                        is_planet = event_target:grazing_grounds
                                                    }
                                                }
                                            }
                                            found_system = {
                                                move_to = this
                                            }
                                        }
                                        find_closest_planet = {
                                            trigger = {
                                                id = amoeba.x2.trigger.4
                                                is_planet = event_target:grazing_grounds
                                            }
                                            found_planet = {
                                                effect = {
                                                    id = amoeba.x2.effect.2
                                                    event_target:hunting_amoeba = {
                                                        set_aggro_range = 40
                                                    }
                                                }
                                                orbit_planet = this
                                                wait = {
                                                    duration = 400
                                                    random = 150
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            else = {
                                queue_actions = {
                                    repeat = {
                                        find_random_system = {
                                            trigger = {
                                                id = amoeba.x1.trigger.1
                                                closest_system = {
                                                    NOT = {
                                                        has_star_flag = hostile_system
                                                    }
                                                }
                                            }
                                            found_system = {
                                                move_to = this
                                            }
                                        }
                                        find_closest_planet = {
                                            trigger = {
                                                id = amoeba.x1.trigger.2
                                                is_star = yes
                                            }
                                            found_planet = {
                                                orbit_planet = this
                                                wait = {
                                                    duration = 100
                                                    random = 50
                                                }
                                            }
                                        }
                                        find_random_system = {
                                            trigger = {
                                                id = amoeba.x1.trigger.3
                                                closest_system = {
                                                    any_system_planet = {
                                                        is_planet = event_target:grazing_grounds
                                                    }
                                                }
                                            }
                                        }
                                        find_closest_planet = {
                                            trigger = {
                                                id = amoeba.x1.trigger.4
                                                is_planet = event_target:grazing_grounds
                                            }
                                            found_planet = {
                                                orbit_planet = this
                                                wait = {
                                                    duration = 300
                                                    random = 50
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    every_country = {
                        limit = {
                            has_modifier = pacified_amoebas
                        }
                        prev = {
                            set_faction_hostility = {
                                set_hostile = no
                                set_neutral = yes
                                target = prev
                            }
                        }
                    }
                }
            }
        }
        random_system = {
            limit = {
                has_star_flag = drone_system_1
                NOR = {
                    any_fleet_in_system = {
                        exists = owner
                        owner = {
                            is_country_type = drone
                        }
                    }
                    any_country = {
                        intel_level = {
                            level > low
                            system = prev
                        }
                    }
                }
            }
            random_system_planet = {
                limit = {
                    has_deposit_for = shipclass_mining_station
                }
                create_drone_country = yes
                event_target:drone_country = {
                    save_event_target_as = mining_drones
                    set_graphical_culture = ancient_drone_01
                    create_fleet = {
                        name = "NAME_Ancient_Mining_Drones"
                        effect = {
                            set_owner = event_target:drone_country
                            create_ship = {
                                name = "NAME_Drone_2432-D"
                                design = "NAME_Ancient_Mining_Drone"
                            }
                            create_ship = {
                                name = "NAME_Drone_7731-A"
                                design = "NAME_Ancient_Mining_Drone"
                            }
                            create_ship = {
                                name = "NAME_Drone_4119-X"
                                design = "NAME_Ancient_Combat_Drone"
                            }
                            set_location = PREVPREV
                            set_fleet_stance = aggressive
                            set_aggro_range_measure_from = return_point
                            set_aggro_range = 150
                            queue_actions = {
                                repeat = {
                                    wait = {
                                        duration = 999
                                        random = 10
                                    }
                                }
                            }
                        }
                    }
                }
                create_mining_station = {
                    owner = event_target:mining_drones
                }
            }
        }
        random_system = {
            limit = {
                has_star_flag = drone_system_2
                NOR = {
                    any_fleet_in_system = {
                        exists = owner
                        owner = {
                            is_country_type = drone
                        }
                    }
                    any_country = {
                        intel_level = {
                            level > low
                            system = prev
                        }
                    }
                }
            }
            every_system_planet = {
                limit = {
                    has_deposit_for = shipclass_mining_station
                }
                create_drone_country = yes
                event_target:drone_country = {
                    save_event_target_as = mining_drones2
                    set_graphical_culture = ancient_drone_01
                    create_fleet = {
                        name = "NAME_Ancient_Mining_Drones"
                        effect = {
                            set_owner = event_target:drone_country
                            create_ship = {
                                name = "NAME_Drone_1832-D"
                                design = "NAME_Ancient_Mining_Drone"
                            }
                            create_ship = {
                                name = "NAME_Drone_0931-F"
                                design = "NAME_Ancient_Combat_Drone"
                            }
                            create_ship = {
                                name = "NAME_Drone_1119-X"
                                design = "NAME_Ancient_Combat_Drone"
                            }
                            set_location = PREVPREV
                            set_fleet_stance = aggressive
                            set_aggro_range_measure_from = return_point
                            set_aggro_range = 200
                        }
                    }
                }
                create_mining_station = {
                    owner = event_target:mining_drones2
                }
            }
        }
        if = {
            limit = {
                any_playable_country = {
                    has_modifier = pacified_amoebas
                    any_system_within_border = {
                        NOT = {
                            any_system_planet = {
                                is_colony = yes
                            }
                        }
                        NOT = {
                            any_fleet_in_system = {
                                owner = {
                                    OR = {
                                        is_country_type = amoeba
                                        is_country_type = amoeba_borderless
                                        is_country_type = amoeba_garrison
                                    }
                                }
                            }
                        }
                    }
                    OR = {
                        count_system_within_border = {
                            count <= 2
                            limit = {
                                any_fleet_in_system = {
                                    owner = {
                                        OR = {
                                            is_country_type = amoeba
                                            is_country_type = amoeba_borderless
                                            is_country_type = amoeba_garrison
                                        }
                                    }
                                }
                            }
                        }
                        AND = {
                            count_system_within_border = {
                                count > 40
                            }
                            count_system_within_border = {
                                count <= 3
                                limit = {
                                    any_fleet_in_system = {
                                        owner = {
                                            OR = {
                                                is_country_type = amoeba
                                                is_country_type = amoeba_borderless
                                                is_country_type = amoeba_garrison
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            every_playable_country = {
                limit = {
                    has_modifier = pacified_amoebas
                    any_system_within_border = {
                        num_planets_in_system > 1
                        NOT = {
                            any_system_planet = {
                                is_colony = yes
                            }
                        }
                        NOT = {
                            any_fleet_in_system = {
                                owner = {
                                    is_amoeba_country_type = yes
                                }
                            }
                        }
                    }
                    OR = {
                        count_system_within_border = {
                            count <= 2
                            limit = {
                                any_fleet_in_system = {
                                    owner = {
                                        is_amoeba_country_type = yes
                                    }
                                }
                            }
                        }
                        AND = {
                            count_system_within_border = {
                                count > 40
                            }
                            count_system_within_border = {
                                count <= 3
                                limit = {
                                    any_fleet_in_system = {
                                        owner = {
                                            is_amoeba_country_type = yes
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                random_system_within_border = {
                    limit = {
                        num_planets_in_system > 1
                        NOT = {
                            any_system_planet = {
                                is_colony = yes
                            }
                        }
                        NOT = {
                            any_fleet_in_system = {
                                owner = {
                                    is_amoeba_country_type = yes
                                }
                            }
                        }
                    }
                    random_system_planet = {
                        limit = {
                            is_star = no
                        }
                        create_amoeba_country = yes
                        event_target:amoeba_country = {
                            create_fleet = {
                                name = "NAME_Space_Amoeba"
                                effect = {
                                    set_owner = event_target:amoeba_country
                                    random_list = {
                                        1 = {
                                            create_ship = {
                                                name = "NAME_Ortus"
                                                design = "NAME_Large_Space_Organism_Orange"
                                            }
                                            create_ship = {
                                                name = "NAME_Oriens"
                                                design = "NAME_Large_Space_Organism_Orange"
                                            }
                                            create_ship = {
                                                name = "NAME_Cortus"
                                                design = "NAME_Large_Space_Organism_Orange"
                                            }
                                        }
                                        1 = {
                                            create_ship = {
                                                name = "NAME_Ortus"
                                                design = "NAME_Large_Space_Organism_Teal"
                                            }
                                            create_ship = {
                                                name = "NAME_Oriens"
                                                design = "NAME_Large_Space_Organism_Teal"
                                            }
                                            create_ship = {
                                                name = "NAME_Cortus"
                                                design = "NAME_Large_Space_Organism_Teal"
                                            }
                                        }
                                        1 = {
                                            create_ship = {
                                                name = "NAME_Ortus"
                                                design = "NAME_Large_Space_Organism_Blue"
                                            }
                                            create_ship = {
                                                name = "NAME_Oriens"
                                                design = "NAME_Large_Space_Organism_Blue"
                                            }
                                            create_ship = {
                                                name = "NAME_Cortus"
                                                design = "NAME_Large_Space_Organism_Blue"
                                            }
                                        }
                                        1 = {
                                            create_ship = {
                                                name = "NAME_Ortus"
                                                design = "NAME_Large_Space_Organism_Zebra"
                                            }
                                            create_ship = {
                                                name = "NAME_Oriens"
                                                design = "NAME_Large_Space_Organism_Zebra"
                                            }
                                            create_ship = {
                                                name = "NAME_Cortus"
                                                design = "NAME_Large_Space_Organism_Zebra"
                                            }
                                        }
                                    }
                                    set_location = PREVPREV
                                    set_fleet_stance = aggressive
                                    set_aggro_range_measure_from = self
                                    set_aggro_range = 100
                                    queue_actions = {
                                        wait = {
                                            duration = 10
                                            random = 3
                                        }
                                    }
                                }
                            }
                            every_country = {
                                limit = {
                                    has_modifier = pacified_amoebas
                                }
                                prev = {
                                    set_faction_hostility = {
                                        set_hostile = no
                                        set_neutral = yes
                                        target = prev
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        if = {
            limit = {
                years_passed > 48
                NOT = {
                    has_global_flag = amoeba_garrison_spawn_cooldown
                }
                NOT = {
                    has_global_flag = no_more_amoeba_garrison_spawns
                }
                exists = event_target:amoeba_home_system
                event_target:amoeba_home_system = {
                    any_fleet_in_system = {
                        owner = {
                            is_country_type = amoeba_garrison
                        }
                    }
                    OR = {
                        exists = space_owner
                        count_fleet_in_system = {
                            count = 0
                            limit = {
                                owner = {
                                    NOT = {
                                        is_country_type = amoeba_garrison
                                    }
                                }
                            }
                        }
                    }
                }
            }
            random = {
                chance = 33
                event_target:amoeba_home_system = {
                    if = {
                        limit = {
                            has_star_flag = amoeba_swarm_1
                        }
                        remove_star_flag = amoeba_swarm_1
                        set_global_flag = no_more_amoeba_garrison_spawns
                    }
                    else = {
                        set_star_flag = amoeba_swarm_1
                        set_timed_global_flag = {
                            flag = amoeba_garrison_spawn_cooldown
                            days = 6000
                        }
                    }
                    random_system_planet = {
                        limit = {
                            is_star = no
                        }
                        create_amoeba_country_borderless = yes
                        event_target:amoeba_country_borderless = {
                            create_fleet = {
                                name = "NAME_Amoeba_Swarm"
                                effect = {
                                    set_owner = event_target:amoeba_country_borderless
                                    random_list = {
                                        1 = {
                                            while = {
                                                count = 5
                                                create_ship = {
                                                    name = ""
                                                    design = "NAME_Large_Space_Organism_Zebra"
                                                }
                                            }
                                            while = {
                                                count = 15
                                                create_ship = {
                                                    name = ""
                                                    design = "NAME_Small_Space_Organism_Zebra"
                                                }
                                            }
                                            if = {
                                                limit = {
                                                    years_passed > 79
                                                }
                                                while = {
                                                    count = 3
                                                    create_ship = {
                                                        name = ""
                                                        design = "NAME_Large_Space_Organism_Zebra"
                                                    }
                                                }
                                                while = {
                                                    count = 9
                                                    create_ship = {
                                                        name = ""
                                                        design = "NAME_Small_Space_Organism_Zebra"
                                                    }
                                                }
                                            }
                                        }
                                        1 = {
                                            while = {
                                                count = 5
                                                create_ship = {
                                                    name = ""
                                                    design = "NAME_Large_Space_Organism_Teal"
                                                }
                                            }
                                            while = {
                                                count = 15
                                                create_ship = {
                                                    name = ""
                                                    design = "NAME_Small_Space_Organism_Teal"
                                                }
                                            }
                                            if = {
                                                limit = {
                                                    years_passed > 79
                                                }
                                                while = {
                                                    count = 3
                                                    create_ship = {
                                                        name = ""
                                                        design = "NAME_Large_Space_Organism_Teal"
                                                    }
                                                }
                                                while = {
                                                    count = 9
                                                    create_ship = {
                                                        name = ""
                                                        design = "NAME_Small_Space_Organism_Teal"
                                                    }
                                                }
                                            }
                                        }
                                        1 = {
                                            while = {
                                                count = 5
                                                create_ship = {
                                                    name = ""
                                                    design = "NAME_Large_Space_Organism_Blue"
                                                }
                                            }
                                            while = {
                                                count = 15
                                                create_ship = {
                                                    name = ""
                                                    design = "NAME_Small_Space_Organism_Blue"
                                                }
                                            }
                                            if = {
                                                limit = {
                                                    years_passed > 79
                                                }
                                                while = {
                                                    count = 3
                                                    create_ship = {
                                                        name = ""
                                                        design = "NAME_Large_Space_Organism_Blue"
                                                    }
                                                }
                                                while = {
                                                    count = 9
                                                    create_ship = {
                                                        name = ""
                                                        design = "NAME_Small_Space_Organism_Blue"
                                                    }
                                                }
                                            }
                                        }
                                        1 = {
                                            while = {
                                                count = 5
                                                create_ship = {
                                                    name = ""
                                                    design = "NAME_Large_Space_Organism_Orange"
                                                }
                                            }
                                            while = {
                                                count = 15
                                                create_ship = {
                                                    name = ""
                                                    design = "NAME_Small_Space_Organism_Orange"
                                                }
                                            }
                                            if = {
                                                limit = {
                                                    years_passed > 79
                                                }
                                                while = {
                                                    count = 3
                                                    create_ship = {
                                                        name = ""
                                                        design = "NAME_Large_Space_Organism_Orange"
                                                    }
                                                }
                                                while = {
                                                    count = 9
                                                    create_ship = {
                                                        name = ""
                                                        design = "NAME_Small_Space_Organism_Orange"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    set_location = PREVPREV
                                    set_fleet_stance = aggressive
                                    set_aggro_range_measure_from = self
                                    set_aggro_range = 100
                                    set_fleet_flag = amoeba_home_wave
                                    queue_actions = {
                                        find_random_system = {
                                            trigger = {
                                                id = "amoeba_swarm.1"
                                                distance = {
                                                    source = event_target:amoeba_home_system
                                                    min_jumps = 10
                                                }
                                            }
                                            found_system = {
                                                move_to = this
                                            }
                                        }
                                    }
                                }
                            }
                            every_country = {
                                limit = {
                                    has_modifier = pacified_amoebas
                                }
                                prev = {
                                    set_faction_hostility = {
                                        set_hostile = no
                                        set_neutral = yes
                                        target = prev
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
