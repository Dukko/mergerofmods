#
# These defines the type of bypasses that exist in game. This is only the logical connection between system
# These can be added to megastructures
#
# bypass_type = {
#     name = GATEWAY_GALACTIC         # the localization key used in triggers and effects for the type
#     is_pathfind = yes                 # whether this type can be automatically used by the pathfinding (otherwise you'll have to right click the object containing it)
#     requires_exploration = no        # whether this bypass type needs to be 'seen' before it can be used
#     uses_action = no                 # whether this type needs an action or can be used automagically
#     always_active = no                 # whether bypasses of these types are automatically active on creation, or if they need to be researched/upgraded to be activated
#     windup_time = 0                 # time spent "prepping" in the system before going through the bypass
#     winddown_time = 0                 # time spent "recovering" in the system after going through the bypass
#     ftl_multiplier = 0                # 0 means instant
#    extends_sensors = yes            # whether you can "see through" the bypass and extends your sensor range to the other side
#     icon_frame = 25
#     remember_instances = no     # whether countries remember meeting a specific instance of that type, or if they just remember seeing the type in general
#     galactic_map_tooltip_header=GATEWAY_GALACTIC
#     galactic_map_tooltip_desc=GATEWAY_GALACTIC_DESC
#     connection_type = any_other
#    ftl_ship_effect     = "gateway_ftl_ship_effect_entity"        # what effect to spawn on the ship when they jump through the bypass
#    ftl_bypass_effect    = "gateway_ftl_bypass_effect_entity"    # what effect to spawn on the bypass when a ship jumps through
#    bypass_effect         = ""
#    animation_time = 3                # number of days to wait for the jump animation to be played
#     prerequisites = {
#         tech_gateway_activation
#     }
#     on_pre_explore = {                    # an effect that is called just before the jump of a right click "explore" action of a fleet
#
#     }
#    country_can_use = {                    # trigger to evaluate if a country can use bypasses of this type. this: country, from: (optional) system owner; default: { always = yes }
#    }
#     on_action = "on_entering_bypass"    # The name of the on-action event that will be fired upon entering FTL (if set)
#                                         # THIS = Fleet
#                                         # FROM = System jumping to
#                                         # FROMFROM = System jumped from
# }
gateway = {
    name = GATEWAY_GALACTIC
    is_pathfind = yes
    uses_action = no
    requires_exploration = no
    always_active = no
    windup_time = 0
    winddown_time = 0
    ftl_multiplier = 0    # 0 means instant
    icon_frame = 25
    remember_instances = no    # whether countries remember meeting a specific instance of that type, or if they just remember seeing the type in general
    galactic_map_tooltip_header = GATEWAY_GALACTIC
    galactic_map_tooltip_desc = GATEWAY_GALACTIC_DESC
    connection_type = any_other
    animation_time = 1
    ftl_ship_effect = "gateway_ftl_ship_effect_entity"
    ftl_bypass_effect = "gateway_ftl_bypass_effect_entity"
    prerequisites = { tech_gateway_activation }
    on_pre_explore = {
        activate_gateway = fromfrom
        if = {
            limit = { num_active_gateways = 1 }
            random_megastructure = {
                limit = { is_megastructure_type = gateway_ruined }
                upgrade_megastructure_to = gateway_restored
                finish_upgrade = yes
            }
        }
    }
    country_can_use = {
        custom_tooltip = {
            fail_text = GATEWAY_COUNTRY_CANNOT_USE
            OR = {
                NOT = { exists = from }
                from = {
                    OR = {
                        is_same_value = root
                        is_in_federation_with = root
                        is_overlord_to = root
                        root = { is_overlord_to = from }
                    }
                }
                from = {
                    NOR = {
                        has_closed_borders = root
                        is_hostile = root
                    }
                }
            }
            NOR = {
                is_country_type = amoeba
                is_country_type = amoeba_borderless
                is_country_type = caravaneer_fleet
                is_country_type = crystal
                is_country_type = feral_prethoryn
                is_country_type = guardian
                is_country_type = guardian_dragon
                is_country_type = tiyanki
                is_country_type = vluur
            }
        }
    }
    on_action = "on_entering_gateway"
}
wormhole = {
    name = NATURAL_WORMHOLE_GALACTIC
    is_pathfind = yes
    uses_action = no
    requires_exploration = yes
    always_active = yes
    windup_time = 0
    winddown_time = 0
    ftl_multiplier = 0
    extends_sensors = yes
    icon_frame = 12
    remember_instances = yes
    animation_time = 1
    galactic_map_tooltip_header = NATURAL_WORMHOLE_GALACTIC
    galactic_map_tooltip_desc = NATURAL_WORMHOLE_DESC
    connection_type = one_to_one
    ftl_ship_effect = "wormhole_ftl_ship_effect_entity"
    ftl_bypass_effect = "wormhole_ftl_bypass_effect_entity"
    prerequisites = {
        tech_wormhole_stabilization
    }
    potential = {
        always = yes
    country_can_use = {
        custom_tooltip = {
            fail_text = NATURAL_WORMHOLE_COUNTRY_CANNOT_USE
            # Wormhole can be used if...
            OR = {
                # System has no owner
                NOT = { exists = from }
                # System's owner has not closed borders to you
                from = { 
                    NOT = { has_closed_borders = root }
                }
                # System's owner is at war with you
                from = { is_at_war_with = root }
                # System's owner is not a proper empire
                from = {
                    NOR = {
                        is_country_type = default
                        is_country_type = awakened_fallen_empire
                        is_country_type = fallen_empire
                    }
                }
            }
        }
    }
    on_action = "on_entering_wormhole"
}
lgate = {
    name = LGATE_GALACTIC
    is_pathfind = yes
    uses_action = no
    always_active = no
    windup_time = 0
    winddown_time = 0
    ftl_multiplier = 0    # 0 means instant
    icon_frame = 30
    remember_instances = no    # whether countries remember meeting a specific instance of that type, or if they just remember seeing the type in general
    galactic_map_tooltip_header = LGATE_GALACTIC
    galactic_map_tooltip_desc = LGATE_GALACTIC_DESC
    connection_type = scripted_connection
    animation_time = 1
    ftl_ship_effect = "gateway_ftl_ship_effect_entity"
    ftl_bypass_effect = "gateway_ftl_bypass_effect_entity"
    # prerequisites = { tech_lgate_activation }
    on_pre_explore = {
        # Fallback for defect save games
        if = {
            limit = {
                exists = owner
                has_global_flag = lgates_activated_globally
                owner = {
                    has_country_flag = lgates_activated
                    has_technology = tech_lgate_activation
                }
            }
            fromfrom = {
                if = {
                    limit = { CmtTriggerIsClosedLgate = yes }
                    # Enable L-Gates over time
                    prev.owner = { country_event = { id = distar.10960 } }
                } else = {
                    CmtEffectOpenLgate = yes
                    # random_system_megastructure = {
                    #     limit = { CmtTriggerIsOpenedLgate = yes }
                    #     CmtEffectOpenLgate = yes
                    # }
                }
            }
        }
    }
    country_can_use = {
        custom_tooltip = {
            fail_text = LGATE_COUNTRY_CANNOT_USE
            #has_global_flag = l_cluster_opened
            exists = this
            is_scope_type = country
            OR = {
                has_global_flag = lgates_activated_globally
                has_country_flag = lgates_activated
                AND = {
                    exists = owner
                    owner = { has_country_flag = lgates_activated }
                }
            }
            # invalid object???
            NOR = {
                is_country_type = amoeba
                is_country_type = amoeba_borderless
                is_country_type = caravaneer_fleet
                is_country_type = crystal
                is_country_type = feral_prethoryn
                is_country_type = guardian
                is_country_type = guardian_dragon
                is_country_type = tiyanki
                is_country_type = vluur
            }
        }
    }
    on_action = "on_entering_lgate" # for compatibility (key free to use)
    scripted_connection = {
        # defines endpoints that can only reach the "nexus"
        node = {
            # system scope
            has_star_flag = lgate
        }
        # defines endpoint(s) that can reach all "nodes" (but not other nexuses)
        nexus = {
            # system scope
            has_star_flag = lcluster1
        }
    }
}